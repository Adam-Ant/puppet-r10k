#!/opt/puppet/bin/ruby

require 'rubygems'
require 'sinatra/base'
require 'webrick'
require 'resolv'
require 'json'
require 'mcollective'

include MCollective::RPC

GITSERVER = '<%= @git_server.first %>'
LOGFILE   = '/var/lib/peadmin/webhook.log'
# USER      = 'admin'
# PASS      = 'admin'

ENV['HOME'] = '/root'
ENV['PATH'] = '/sbin:/usr/sbin:/bin:/usr/bin:/opt/puppet/bin'

opts = {
        :Port               => 8088,
        :Logger             => WEBrick::Log::new(LOGFILE, WEBrick::Log::DEBUG),
        :ServerType         => WEBrick::Daemon,
        :SSLEnable          => false,
}

class Server  < Sinatra::Base

    set :public_dir, 'public'

    get '/' do
      raise Sinatra::NotFound
    end

    get '/deploy' do
      protected!
      deploy()
    end

    not_found do
      halt 404, 'You shall not pass! (page not found) \n'
    end

    helpers do
      def deploy()
        options =  MCollective::Util.default_options
        options[:config] = '/var/lib/peadmin/.mcollective'
        client = rpcclient('r10k', :exit_on_failure => false,:options => options)
        client.discovery_timeout = 10
        client.timeout = 120
        #client.class_filter('r10k::mcollective')
        result = client.send('sync',{})
        {:status => :success, :message => "r10k started"}.to_json
      end

      def protected!
        # only allow access from the git server.
        throw(:halt, [401, "Not authorized: #{request.host}\n"]) unless request.host == GITSERVER
      end
    end
end

Rack::Handler::WEBrick.run(Server, opts) do |server|
        [:INT, :TERM].each { |sig| trap(sig) { server.stop } }
end
